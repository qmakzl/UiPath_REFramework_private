<Activity mc:Ignorable="sap sap2010" x:Class="SendMail" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_SystemError" Type="InArgument(s:Exception)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1232.8,1146.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendMail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SendMail" sap:VirtualizedContainerService.HintSize="836,981.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[in_SystemError Is Nothing]" sap:VirtualizedContainerService.HintSize="794.4,888.8" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="OutLook 메일 폼" sap:VirtualizedContainerService.HintSize="375.2,739.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="Hello,&lt;br&gt;&lt;br&gt;RPA job has been completed.&lt;br&gt;Please find the attached file of the result of RPA process.&lt;br&gt;&lt;br&gt;- Total RPA process time: {prcoessTime} &lt;br&gt;&lt;br&gt;* Please check with the person in charge in case of the unprocessable cases&#xA;&lt;br&gt;&lt;br&gt;Thank you." Name="content" />
            <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;Mail Form&quot;).ToString]" Name="MailForm" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Notification" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Notification Type}","RPA Information_Job Completed")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Process Time" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[content]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[content.Replace("{prcoessTime}",Split((DateTime.Now-Convert.ToDateTime(in_Config("Start Time"))).ToString,".")(0))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Content" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Content}",content)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="ProcessName" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Process Name}",in_Config("logF_BusinessProcessName").ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Robot Manager" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Robot Manager}", in_Config("Robot Manager").ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[MailForm]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="True" IsDraft="False" Subject="[&quot;[RPA Job Completed] &quot;  + in_Config(&quot;logF_BusinessProcessName&quot;).ToString]" To="[in_Config(&quot;MailTo&quot;).ToString]">
            <ui:SendOutlookMail.Files>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
            </ui:SendOutlookMail.Files>
          </ui:SendOutlookMail>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="OutLook 메일 폼" sap:VirtualizedContainerService.HintSize="375.2,639.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Default="Hello,&lt;br&gt;&lt;br&gt;{Exception}&lt;br&gt;Please check with the person in charge in case of the unprocessable cases&#xA;&lt;br&gt;&lt;br&gt;Thank you." Name="content" />
            <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;Mail Form&quot;).ToString]" Name="MailForm" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Notification" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Notification Type}","RPA Alert_Error")]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Content" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Content}",content.Replace("{Exception}", in_SystemError.Message))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="ProcessName" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Process Name}",in_Config("logF_BusinessProcessName").ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Robot Manager" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_9">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[MailForm]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[MailForm.Replace("{Robot Manager}", in_Config("Robot Manager").ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[MailForm]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="True" IsDraft="False" Subject="[&quot;[RPA Error] &quot; + in_Config(&quot;logF_BusinessProcessName&quot;).ToString]" To="[in_Config(&quot;MailTo&quot;).ToString]">
            <ui:SendOutlookMail.Files>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
            </ui:SendOutlookMail.Files>
          </ui:SendOutlookMail>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>